name: Test and Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      email_notification:
        description: 'Send email notification on test failure'
        required: false
        default: 'false'
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      # 3️⃣ Run tests with Maven
      - name: Run tests
        run: mvn -B test

      # 4️⃣ Generate test reports
      - name: Generate test reports
        run: |
          # Compile the XmlReportConverter
          javac -d target/classes src/test/java/com/belman/test/reporting/XmlReportConverter.java
          
          # Run the converter to generate HTML reports
          java -cp target/classes com.belman.test.reporting.XmlReportConverter --format=html
          
          # Also generate PDF reports if needed
          java -cp target/classes com.belman.test.reporting.XmlReportConverter --format=pdf

      # 5️⃣ Upload test reports as artifacts
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: test-reports/
          retention-days: 14

      # 6️⃣ Upload Surefire reports as artifacts
      - name: Upload Surefire reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/
          retention-days: 14

      # 7️⃣ Send email notification on failure (if requested)
      - name: Send email notification
        if: failure() && github.event.inputs.email_notification == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "❌ Test failure in Belsign Photo Documentation"
          body: |
            Tests have failed in the Belsign Photo Documentation project.
            
            Repository: ${{ github.repository }}
            Workflow: ${{ github.workflow }}
            Run: ${{ github.run_id }}
            Commit: ${{ github.sha }}
            
            See the detailed test reports in the workflow artifacts:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: GitHub Actions

  # Job for code quality analysis
  code-quality:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      # Run PMD analysis
      - name: Run PMD
        run: mvn pmd:pmd

      # Run JaCoCo for code coverage
      - name: Run JaCoCo
        run: mvn jacoco:report

      # Upload code quality reports
      - name: Upload code quality reports
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-reports
          path: |
            target/site/pmd.html
            target/site/jacoco/
          retention-days: 14

  # Job for publishing reports to GitHub Pages (optional)
  publish-reports:
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download all artifacts
      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: reports/test-reports

      - name: Download code quality reports
        uses: actions/download-artifact@v4
        with:
          name: code-quality-reports
          path: reports/code-quality

      # Create index page
      - name: Create index page
        run: |
          mkdir -p reports
          cat > reports/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Belsign Photo Documentation - Test Reports</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              h1 { color: #333; }
              .section { background-color: #f5f5f5; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
              a { color: #0366d6; text-decoration: none; }
              a:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <h1>Belsign Photo Documentation - Test Reports</h1>
            <p>Generated on $(date)</p>
            
            <div class="section">
              <h2>Test Reports</h2>
              <ul>
                $(find reports/test-reports -type f -name "*.html" | sort | while read file; do
                  echo "<li><a href=\"${file#reports/}\">${file#reports/test-reports/}</a></li>"
                done)
              </ul>
            </div>
            
            <div class="section">
              <h2>Code Quality Reports</h2>
              <ul>
                <li><a href="code-quality/pmd.html">PMD Report</a></li>
                <li><a href="code-quality/jacoco/index.html">JaCoCo Coverage Report</a></li>
              </ul>
            </div>
          </body>
          </html>
          EOF

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: reports
          branch: gh-pages