<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.belman</groupId>
    <artifactId>ExamProjectBelman</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <javafx.version>21.0.2</javafx.version>
        <gluon.version>6.2.3</gluon.version>
        <!-- Disable ANSI colors to prevent Surefire parsing errors -->
        <jansi.passthrough>true</jansi.passthrough>
        <style.color>never</style.color>
        <gluon.license>adea5f2f-c8c5-4fa9-b133-d943776b93fd</gluon.license>
    </properties>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>gluon-releases</id>
            <url>https://nexus.gluonhq.com/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>gluon-plugin-releases</id>
            <url>https://nexus.gluonhq.com/nexus/content/repositories/releases/</url>
        </pluginRepository>
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- JavaFX -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- Gluon UI + Attach -->
        <dependency>
            <groupId>com.gluonhq</groupId>
            <artifactId>charm-glisten</artifactId>
            <version>${gluon.version}</version>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>display</artifactId>
            <version>4.0.20</version>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>lifecycle</artifactId>
            <version>4.0.20</version>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>storage</artifactId>
            <version>4.0.20</version>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>util</artifactId>
            <version>4.0.20</version>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>pictures</artifactId>
            <version>4.0.19</version>
        </dependency>

        <!-- PDFBox -->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.31</version>
        </dependency>

        <!-- JUnit -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.0</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Platform dependencies for custom test reporting -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.10.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>1.10.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>1.10.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>position</artifactId>
            <version>4.0.20</version>
        </dependency>

        <dependency>
            <groupId>com.gluonhq.attach</groupId>
            <artifactId>connectivity</artifactId>
            <version>4.0.20</version>
        </dependency>

        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.14.11</version>
        </dependency>

        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>

        <!-- Security Dependency for Vulnerability Scanning -->
        <dependency>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-core</artifactId>
            <version>8.4.0</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.11.0</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.11.0</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>net.sourceforge.tess4j</groupId>
            <artifactId>tess4j</artifactId>
            <version>5.4.0</version>
        </dependency>

        <!-- Database Dependencies -->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>12.4.2.jre11</version>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.43.2.1</version>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>5.0.1</version>
        </dependency>

        <!-- Flyway for database migrations -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>9.22.3</version>
        </dependency>

        <!-- Email Dependencies -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>2.0.1</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.11</version>
        </dependency>

        <!-- Logging Dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.9</version>
        </dependency>

        <!-- ArchUnit for architecture testing -->
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <version>1.0.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                    <include>**/*.css</include>
                    <include>**/*.json</include>
                    <include>**/*.png</include>
                    <include>**/*.sql</include>
                    <include>**/*.fxml</include>
                    <include>**/*.properties</include>
                    <include>META-INF/native-image/**</include>
                </includes>
            </resource>


        </resources>

        <testResources>
            <testResource>
                <directory>src/main/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <!-- JavaFX plugin -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>com.belman.bootstrap.Main</mainClass>
                    <options>
                        <option>--add-opens</option>
                        <option>java.base/java.lang=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>java.base/java.util=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>java.base/java.lang.reflect=ALL-UNNAMED</option>
                    </options>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <mainClass>com.belman.bootstrap.Main</mainClass>
                    <systemProperties>
                        <com.gluonhq.license>${gluon.license}</com.gluonhq.license>
                        <com.gluonhq.license.disable>true</com.gluonhq.license.disable>
                    </systemProperties>
                </configuration>
            </plugin>

            <!--- GluonFX plugin for Android -->
            <!--
                Note: Building for Android on Windows requires WSL2 (Windows Subsystem for Linux).
                If you encounter the error "We currently can't compile to aarch64-linux-android when running on x86_64-microsoft-windows",
                please refer to the WSL setup guide at docs/mobile/wsl_setup_guide.md for instructions on how to set up WSL2 for Android builds.
            -->
            <plugin>
                <groupId>com.gluonhq</groupId>
                <artifactId>gluonfx-maven-plugin</artifactId>
                <version>1.0.26</version>
                <configuration>
                    <mainClass>com.belman.bootstrap.Main</mainClass>
                    <target>android</target>
                    <graalvmHome>${env.GRAALVM_HOME}</graalvmHome>
                    <nativeImageArgs>
                        <arg>--no-fallback</arg>
                        <arg>--reportAggregate-unsupported-elements-at-runtime</arg>
                        <arg>--allow-incomplete-classpath</arg>
                        <arg>-H:+ReportExceptionStackTraces</arg>
                        <arg>-H:+AddAllCharsets</arg>
                    </nativeImageArgs>
                    <runtimeArgs>
                        <arg>-Dcom.gluonhq.license.disable=true</arg>
                    </runtimeArgs>
                    <skipTests>true</skipTests>
                    <resourcesList>
                        <list>.*\.fxml$</list>
                        <list>.*\.css$</list>
                        <list>.*\.png$</list>
                        <list>.*\.properties$</list>
                        <list>META-INF/services/.*</list>
                        <list>org/apache/pdfbox/resources/.*</list>
                    </resourcesList>
                    <reflectionList>
                        <!-- View Controllers -->
                        <list>com.belman.presentation.views.splash.SplashViewController</list>
                        <list>com.belman.presentation.views.login.LoginViewController</list>
                        <list>com.belman.presentation.views.worker.WorkerViewController</list>

                        <!-- Classes using Class.forName() -->
                        <list>com.belman.bootstrap.hacks.GluonInternalClassesFix</list>
                        <list>com.belman.bootstrap.config.RepositoryInitializer</list>
                        <list>com.belman.presentation.base.BaseView</list>
                        <list>com.belman.presentation.core.ViewLoader</list>

                        <!-- Classes using reflection for field access -->
                        <list>com.belman.bootstrap.di.ServiceLocator</list>
                        <list>com.belman.bootstrap.platform.StorageServiceOverride</list>

                        <!-- Classes using reflection for method access -->
                        <list>com.belman.dataaccess.persistence.sql.SqlUserRepository</list>
                        <list>com.belman.application.usecase.photo.GluonCameraService</list>

                        <!-- External classes using reflection -->
                        <list>org.apache.pdfbox.pdmodel.font.PDType1Font</list>
                    </reflectionList>
                </configuration>
            </plugin>


            <!-- Maven Shade Plugin for executable JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.belman.bootstrap.Main</mainClass>
                                </transformer>
                            </transformers>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- JaCoCo plugin for test coverage reporting -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/quality-reports/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.70</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.70</minimum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.75</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <excludes>
                                <exclude>**/bootstrap/**/*</exclude>
                                <exclude>**/generated/**/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- SpotBugs plugin for static code analysis -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.3.6</version>
                <configuration>
                    <effort>Max</effort>
                    <threshold>Medium</threshold>
                    <xmlOutput>true</xmlOutput>
                    <failOnError>false</failOnError>
                    <excludeFilterFile>${project.basedir}/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <id>spotbugs-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- PMD plugin for static code analysis -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.20.0</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                    <excludes>
                        <exclude>**/generated/**/*.java</exclude>
                        <!-- Exclude UI tests that require JavaFX -->
                        <exclude>**/presentation/**/*Test.java</exclude>
                    </excludes>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                    <rulesets>
                        <!-- Use built-in rule sets -->
                        <ruleset>/category/java/bestpractices.xml</ruleset>
                        <ruleset>/category/java/codestyle.xml</ruleset>
                        <ruleset>/category/java/design.xml</ruleset>
                        <ruleset>/category/java/errorprone.xml</ruleset>
                        <ruleset>/category/java/multithreading.xml</ruleset>
                        <ruleset>/category/java/performance.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- SonarQube plugin for code quality analysis -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.9.1.2184</version>
                <configuration>
                    <sonar.projectKey>belman-photo-doc</sonar.projectKey>
                    <sonar.projectName>Belsign Photo Documentation</sonar.projectName>
                    <sonar.host.url>http://localhost:9000</sonar.host.url>
                    <sonar.login>${sonar.login}</sonar.login>
                    <sonar.sources>src/main/java</sonar.sources>
                    <sonar.tests>src/test/java</sonar.tests>
                    <sonar.java.binaries>target/classes</sonar.java.binaries>
                    <sonar.java.test.binaries>target/test-classes</sonar.java.test.binaries>
                    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
                    <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
                    <sonar.exclusions>**/bootstrap/**/*</sonar.exclusions>
                </configuration>
            </plugin>

            <!-- Maven Surefire plugin for unit test execution and XML report generation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <reportFormat>xml</reportFormat>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                        <!-- Exclude UI tests that require JavaFX -->
                        <exclude>**/presentation/**/*Test.java</exclude>
                        <!-- Exclude integration tests (handled by Failsafe) -->
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                    <!-- Configure headless mode for JavaFX -->
                    <argLine>
                        -Djava.awt.headless=true
                        -Dtestfx.robot=glass
                        -Dtestfx.headless=true
                        -Dprism.order=sw
                        -Dprism.text=t2k
                        -Dheadless.geometry=1280x720-32
                        -Djansi.passthrough=true
                        -Dstyle.color=never
                        -Dorg.slf4j.simpleLogger.defaultLogLevel=info
                        -Dorg.slf4j.simpleLogger.showDateTime=false
                        -Dcom.zaxxer.hikari.pool.HikariPool=info
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                        --add-opens java.base/java.lang.reflect=ALL-UNNAMED
                        --add-opens java.base/java.text=ALL-UNNAMED
                        --add-opens java.desktop/java.awt.font=ALL-UNNAMED
                    </argLine>
                    <useJUnitPlatform>true</useJUnitPlatform>
                    <!-- Control forking behavior -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <!-- Disable ANSI colors in output -->
                    <disableXmlReport>false</disableXmlReport>
                    <useFile>true</useFile>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <!-- Maven Failsafe plugin for integration test execution -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                        <!-- Exclude UI tests that require JavaFX -->
                        <exclude>**/presentation/**/*IT.java</exclude>
                    </excludes>
                    <!-- Configure headless mode for JavaFX -->
                    <argLine>
                        -Djava.awt.headless=true
                        -Dtestfx.robot=glass
                        -Dtestfx.headless=true
                        -Dprism.order=sw
                        -Dprism.text=t2k
                        -Dheadless.geometry=1280x720-32
                        -Djansi.passthrough=true
                        -Dstyle.color=never
                        -Dorg.slf4j.simpleLogger.defaultLogLevel=info
                        -Dorg.slf4j.simpleLogger.showDateTime=false
                        -Dcom.zaxxer.hikari.pool.HikariPool=info
                    </argLine>
                    <!-- Control forking behavior -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>android</id>
            <properties>
                <gluonfx.target>android</gluonfx.target>
            </properties>
        </profile>
        <profile>
            <id>android-debug</id>
            <properties>
                <gluonfx.target>android</gluonfx.target>
                <gluonfx.buildtype>debug</gluonfx.buildtype>
            </properties>
        </profile>
        <profile>
            <id>android-release</id>
            <properties>
                <gluonfx.target>android</gluonfx.target>
                <gluonfx.buildtype>release</gluonfx.buildtype>
                <gluonfx.skipSigning>false</gluonfx.skipSigning>
            </properties>
        </profile>
    </profiles>
</project>
